/**
* Expression Library
* @namespace
* @memberof DuAEF.Expressions
*/
DuAEF.Expressions.Library = {};

/**
 * Checks the type of a pseudo-effect used by Duik.<br />
 * This is a workaround for the missing matchName in expressions.<br />
 * Pseudo-Effects used by Duik start with a hidden property which name is the same as the matchName of the effect itself (without the 'Pseudo/' part).
 * @function
 * @name checkDuikEffect
 * @example
 * if ( checkEffect(thisLayer.effect(1), "DUIK parentConstraint2") ) { "This is the second version of the parent constraint by Duik" }
 * else { "Who knows what this is?" }
 * @param {Property} fx The effect to check
 * @param {string} duikMatchName The matchName of a pseudo-effect used by Duik (without the 'Pseudo/' part)
 * @return {boolean} True when the property at propIndex is named propName
 */
DuAEF.Expression.Library.checkDuikEffect = ['',
	'function checkDuikEffect(fx, duikMatchName) {',
	'    if (fx.numProperties  < 1) return false;',
	'    if (!!$.engineName) {',
	'        if ( fx(1).name != duikMatchName ) return false;',
	'    }',
	'    else {',
	'        try { if (fx(1).name != duikMatchName) return false; }',
	'        catch (e) { return false; }',
	'    }',
	'    return true;',
	'}'
	].join('\n');

/**
 * Checks the type of an effect.<br />
 * This is a workaround for the missing matchName in expressions.<br />
 * It checks if the given effect has a specific property at a specific index.
 * @function
 * @name checkEffect
 * @example
 * if ( checkEffect(thisLayer.effect(1), 1, "Blur") ) { "The first effect is a blur!" }
 * else { "Who knows what this is?" }
 * @param {Property} fx The effect to check
 * @param {int} propIndex The index of the property
 * @param {string} propName The expected name of the property. Be careful with the internationalization of After Effects...
 * @return {boolean} True when the property at propIndex is named propName
 */
DuAEF.Expression.Library.checkEffect = ['',
	'function checkEffect(fx, propIndex, propName) {',
	'    if (fx.numProperties  < propIndex) return false;',
	'    //Check when this is a javascript engine (without try/catch for better performance)',
	'    if (!!$.engineName) {',
	'        if ( fx(propIndex).name != propName ) return false;',
	'    }',
	'    //Check with the extendscript engine',
	'    else {',
	'        try { if (fx(propIndex).name != propName) return false; }',
	'        catch (e) { return false; }',
	'    }',
	'    return true;',
	'}'
	].join('\n');

